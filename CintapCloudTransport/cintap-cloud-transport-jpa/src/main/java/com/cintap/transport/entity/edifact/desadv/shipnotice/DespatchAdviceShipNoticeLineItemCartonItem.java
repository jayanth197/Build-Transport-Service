package com.cintap.transport.entity.edifact.desadv.shipnotice;
// Generated May 11, 2022 4:17:20 PM by Hibernate Tools 5.2.12.Final

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * EdifactDesadvHeader generated by hbm2java
 */
@Entity
@Table(name = "edifact_desadv_ship_notice_line_item_carton_item", catalog = "cintap_transport")
@Builder
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
public class DespatchAdviceShipNoticeLineItemCartonItem implements java.io.Serializable {

	private static final long serialVersionUID = 6802960275302676183L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;

	@Column(name = "line_sequence_number")
	private String lineSequenceNumber;

	@Column(name = "item_quantity")
	private String itemQuantity;

	@Column(name = "part_number")
	private String partNumber;

	@Column(name = "schedule_b")
	private String scheduleB;

	@Column(name = "eccn")
	private String eccn;

	@Column(name = "unit_price")
	private String unitPrice;

	@Column(name = "unit_price_currency_code")
	private String unitPriceCurrencyCode;

	@Column(name = "extended_price")
	private String extendedPrice;

	@Column(name = "extended_price_currency_code")
	private String extendedPriceCurrencyCode;

	@Column(name = "part_description")
	private String partDescription;

	@Column(name = "customer_part_description")
	private String customerPartDescription;

	@Column(name = "country_of_origin")
	private String countryOfOrigin;
	
	@Column(name = "is_export_restricted")
	private boolean isExportRestricted;

	@ManyToOne
	@JoinColumn(name = "carton_id")
	@JsonIgnoreProperties("lstDesadvShipNoitceLineItemCartonItem")
	private DespatchAdviceShipNoticeLineItemCarton despatchAdviceShipNoticeLineItemCarton;
	
	@LazyCollection(LazyCollectionOption.FALSE)
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "despatchAdviceShipNoticeLineItemCartonItem", fetch = FetchType.LAZY)
	@JsonIgnoreProperties("despatchAdviceShipNoticeLineItemCartonItem")
	private List<DespatchAdviceShipNoticeLineItemCartonItemSerialNumber> lstDesadvShipNoitceLineItemCartonItemSerialNumber;
	
	public void addDespatchAdviceShipNoticeLineItemCartonItemSerialNumber(DespatchAdviceShipNoticeLineItemCartonItemSerialNumber despatchAdviceShipNoticeLineItemCartonItemSerialNumber) {
		if (despatchAdviceShipNoticeLineItemCartonItemSerialNumber == null) {
			return;
		}
		despatchAdviceShipNoticeLineItemCartonItemSerialNumber.setDespatchAdviceShipNoticeLineItemCartonItem(this);
		if (lstDesadvShipNoitceLineItemCartonItemSerialNumber == null || lstDesadvShipNoitceLineItemCartonItemSerialNumber.isEmpty()) {
			lstDesadvShipNoitceLineItemCartonItemSerialNumber = new ArrayList<>();
			lstDesadvShipNoitceLineItemCartonItemSerialNumber.add(despatchAdviceShipNoticeLineItemCartonItemSerialNumber);
		} else if (!lstDesadvShipNoitceLineItemCartonItemSerialNumber.contains(despatchAdviceShipNoticeLineItemCartonItemSerialNumber)) {
			lstDesadvShipNoitceLineItemCartonItemSerialNumber.add(despatchAdviceShipNoticeLineItemCartonItemSerialNumber);
		}
	}

}
